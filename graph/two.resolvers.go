package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"go-graphql-api/graph/model"
	"time"
)

// UpdatePost is the resolver for the UpdatePost field.
func (r *mutationResolver) UpdatePost(ctx context.Context, postID int, input *model.NewPost) (*model.Post, error) {
	Updatepost := model.Post{
		Title:     input.Title,
		Content:   input.Content,
		UpdatedAt: time.Now().Format("01-02-2006"),
	}

	if err := r.Database.Model(&model.Post{}).Where("id=?", postID).Updates(&Updatepost).Error; err != nil {
		fmt.Println(err)
		return nil, err
	}

	Updatepost.ID = postID
	return &Updatepost, nil
}

// GetOnePost is the resolver for the GetOnePost field.
func (r *queryResolver) GetOnePost(ctx context.Context, id int) (*model.Post, error) {
	post := model.Post{}

	if err := r.Database.Find(&post, id).Error; err != nil {
		fmt.Println(err)
		return nil, err
	}

	return &post, nil
}
